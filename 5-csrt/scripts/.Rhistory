# Load libraries
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Load Data
dat <- read_excel("./demos-performance-combined.xlsx")
# Load libraries
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Load Data
dat <- read_excel("/Users/similovesyou/Desktop/qts/simian-behavior/data/py/hierarchy/tonkean_task_demographics.xlsx")
# Convert 'sex' to a factor
dat$sex <- factor(dat$sex, levels = c(1, 2), labels = c("M", "F"))
# Load libraries
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Load Data
dat <- read_excel("/Users/similovesyou/Desktop/qts/simian-behavior/data/py/hierarchy/tonkean_task_demographics.xlsx")
# Convert 'sex' to a factor
dat$sex <- factor(dat$sex, levels = c(1, 2), labels = c("M", "F"))
# Convert 'species' to a factor with capitalized levels
dat$species <- factor(dat$species, levels = c("Rhesus", "Tonkean"))
# Load libraries
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Load Data
dat <- read_excel("/Users/similovesyou/Desktop/qts/simian-behavior/data/py/hierarchy/tonkean_task_demographics.xlsx")
# Convert 'sex' to a factor
dat$sex <- factor(dat$sex, levels = c(1, 2), labels = c("M", "F"))
# Convert 'species' to a factor with capitalized levels
dat$species <- factor(dat$species, levels = c("Rhesus", "Tonkean"))
#load library
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Charge Data
dat <- read_excel("/Users/similovesyou/Desktop/qts/simian-behavior/data/py/hierarchy/tonkean_task_demographics.xlsx")
# Convert 'sex' to a factor
dat$sex <- factor(dat$sex, levels = c(1, 2), labels = c("M", "F"))
# Do the GLM
mdl_success <- lm(p_success ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_success)
mdl_prem <- lm(p_premature ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_prem)
# Plot data
ggplot(dat, aes(x = age, y = p_premature, col = sex, alpha = elo_mean)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
scale_color_manual(values = c("F" = "#FF69B4", "M" = "#4169E1")) +
scale_alpha_continuous(
limits = c(500, 1500)
) +
labs(
title = "Relation entre l'âge, le sexe et les performances prématurées",
x = "Âge des individus",
y = "Proportion de performances prématurées",
color = "Sexe",
alpha = "Élo (hiérarchie)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right"
)
#load library
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Charge Data
dat <- read_excel("/Users/similovesyou/Desktop/qts/simian-behavior/data/py/hierarchy/tonkean_task_demographics.xlsx")
# Convert 'sex' to a factor
dat$sex <- factor(dat$sex, levels = c(1, 2), labels = c("M", "F"))
# Do the GLM
mdl_success <- lm(p_success ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_success)
mdl_prem <- lm(p_premature ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_prem)
# Plot data
ggplot(dat, aes(x = age, y = p_premature, col = sex, alpha = elo_mean)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
scale_color_manual(values = c("F" = "#FF69B4", "M" = "#4169E1")) +
scale_alpha_continuous(limits = c(500, 1500)) +
annotate("text", x = max(dat$age) - 2, y = max(dat$p_premature) - 0.05,
label = p_text, size = 5, color = "black") +
labs(
title = "Relation entre l'âge, le sexe et les performances prématurées",
x = "Âge des individus",
y = "Proportion de performances prématurées",
color = "Sexe",
alpha = "Élo (hiérarchie)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right"
)
#load library
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Charge Data
dat <- read_excel("/Users/similovesyou/Desktop/qts/simian-behavior/data/py/hierarchy/tonkean_task_demographics.xlsx")
# Convert 'sex' to a factor
dat$sex <- factor(dat$sex, levels = c(1, 2), labels = c("M", "F"))
# Do the GLM
mdl_success <- lm(p_success ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_success)
mdl_prem <- lm(p_premature ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_prem)
# Plot data
ggplot(dat, aes(x = age, y = p_premature, col = sex, alpha = elo_mean)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
scale_color_manual(values = c("F" = "#FF69B4", "M" = "#4169E1")) +
scale_alpha_continuous(limits = c(500, 1500)) +
annotate("text", x = max(dat$age) - 2, y = max(dat$p_premature) - 0.05,
label = p_text, size = 5, color = "black") +
labs(
title = "Relation entre l'âge, le sexe et les performances prématurées",
x = "Âge des individus",
y = "Proportion de performances prématurées",
color = "Sexe",
alpha = "Élo (hiérarchie)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right"
)
#load library
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Charge Data
dat <- read_excel("/Users/similovesyou/Desktop/qts/simian-behavior/data/py/hierarchy/tonkean_task_demographics.xlsx")
# Convert 'sex' to a factor
dat$sex <- factor(dat$sex, levels = c(1, 2), labels = c("M", "F"))
# Do the GLM
mdl_success <- lm(p_success ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_success)
mdl_prem <- lm(p_premature ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_prem)
# Plot data
ggplot(dat, aes(x = age, y = p_premature, col = sex, alpha = elo_mean)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
scale_color_manual(values = c("F" = "#FF69B4", "M" = "#4169E1")) +
scale_alpha_continuous(limits = c(500, 1500)) +
annotate("text", x = max(dat$age) - 2, y = max(dat$p_premature) - 0.05,
label = p_text, size = 5, color = "black") +
labs(
title = "Relation entre l'âge, le sexe et les performances prématurées",
x = "Âge des individus",
y = "Proportion de performances prématurées",
color = "Sexe",
alpha = "Élo (hiérarchie)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right"
)
#load library
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Charge Data
dat <- read_excel("/Users/similovesyou/Desktop/qts/simian-behavior/data/py/hierarchy/tonkean_task_demographics.xlsx")
# Convert 'sex' to a factor
dat$sex <- factor(dat$sex, levels = c(1, 2), labels = c("M", "F"))
# Do the GLM
mdl_success <- lm(p_success ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_success)
mdl_prem <- lm(p_premature ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_prem)
# Plot data
ggplot(dat, aes(x = age, y = p_premature, col = sex, alpha = elo_mean)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
scale_color_manual(values = c("F" = "#FF69B4", "M" = "#4169E1")) +
scale_alpha_continuous(limits = c(500, 1500)) +
annotate("text", x = max(dat$age) - 2, y = max(dat$p_premature) - 0.05,
label = p_text, size = 5, color = "black") +
labs(
title = "Relation entre l'âge, le sexe et les performances prématurées",
x = "Âge des individus",
y = "Proportion de performances prématurées",
color = "Sexe",
alpha = "Élo (hiérarchie)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right"
)
#load library
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Charge Data
dat <- read_excel("/Users/similovesyou/Desktop/qts/simian-behavior/data/py/hierarchy/tonkean_task_demographics.xlsx")
# Convert 'sex' to a factor
dat$sex <- factor(dat$sex, levels = c(1, 2), labels = c("M", "F"))
# Do the GLM
mdl_success <- lm(p_success ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_success)
mdl_prem <- lm(p_premature ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_prem)
# Plot data
ggplot(dat, aes(x = age, y = p_premature, col = sex, alpha = elo_mean)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
scale_color_manual(values = c("F" = "#FF69B4", "M" = "#4169E1")) +
scale_alpha_continuous(limits = c(500, 1500)) +
annotate("text", x = max(dat$age) - 2, y = max(dat$p_premature) - 0.05,
label = p_text, size = 5, color = "black") +
labs(
title = "Relation entre l'âge, le sexe et les performances prématurées",
x = "Âge des individus",
y = "Proportion de performances prématurées",
color = "Sexe",
alpha = "Élo (hiérarchie)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right"
)
#load library
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Charge Data
dat <- read_excel("/Users/similovesyou/Desktop/qts/simian-behavior/data/py/hierarchy/tonkean_task_demographics.xlsx")
# Convert 'sex' to a factor
dat$sex <- factor(dat$sex, levels = c(1, 2), labels = c("M", "F"))
# Do the GLM
mdl_success <- lm(p_success ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_success)
mdl_prem <- lm(p_premature ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_prem)
# Plot data
ggplot(dat, aes(x = age, y = p_premature, col = sex, alpha = elo_mean)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
scale_color_manual(values = c("F" = "#FF69B4", "M" = "#4169E1")) +
scale_alpha_continuous(
limits = c(500, 1500)
) +
labs(
title = "Relation entre l'âge, le sexe et les performances prématurées",
x = "Âge des individus",
y = "Proportion de performances prématurées",
color = "Sexe",
alpha = "Élo (hiérarchie)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right"
)
#load library
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
# Charge Data
dat <- read_excel("/Users/similovesyou/Desktop/qts/simian-behavior/data/py/hierarchy/tonkean_task_demographics.xlsx")
# Convert 'sex' to a factor
dat$sex <- factor(dat$sex, levels = c(1, 2), labels = c("M", "F"))
# Do the GLM
mdl_success <- lm(p_success ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_success)
mdl_prem <- lm(p_premature ~ age + sex + elo_mean  ,
data = dat)
summary(mdl_prem)
# Plot data
ggplot(dat, aes(x = age, y = p_premature, col = sex, alpha = elo_mean)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = TRUE) +
scale_color_manual(values = c("F" = "#FF69B4", "M" = "#4169E1")) +
scale_alpha_continuous(
limits = c(500, 1500)
) +
labs(
title = "Relation entre l'âge, le sexe et les performances prématurées",
x = "Âge des individus",
y = "Proportion de performances prématurées",
color = "Sexe",
alpha = "Élo (hiérarchie)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right"
)
# Check if p_premature differs between males and females
t_test_prem <- t.test(p_premature ~ sex, data = dat)
t_test_prem
# Check if p_success differs between males and females
t_test_success <- t.test(p_success ~ sex, data = dat)
t_test_success
# If you have multiple groups (e.g., age categories), use ANOVA:
anova_model <- aov(p_premature ~ sex + age, data = dat)
summary(anova_model)
